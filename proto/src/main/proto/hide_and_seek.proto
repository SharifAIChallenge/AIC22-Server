syntax = "proto3";

package ir.sharif.aic.hideandseek.api.grpc;

enum GameErrorCode {
  NOTHING = 0;
}

enum MoveResult {
  CAUGHT_OPPONENT = 0;
  WASTED = 1;
}

enum Team{
  FIRST = 0;
  SECOND = 1;
}

enum PlayerType{
  THIEF = 0;
  POLICE = 1;
}

enum GameStatus{
  PENDING = 0;
  ONGOING = 1;
  FINISHED = 2;
}
enum GameResult{
  UNKNOWN = 0;
  FIRST_WIN = 1;
  SECOND_WIN = 2;
  TIE = 3;
}

enum Turn{
  POLICE_TURN = 0;
  THIEF_TURN = 1;
}


message DeclareReadinessRequest {
  Team team = 1;
  PlayerType playerType = 2;
}

message DeclareReadinessResponse {
  //Server will generate random token for player
  string player_token = 1;
}


message GameError {
  string message = 1;
  GameErrorCode errorCode = 2;
}

message MoveRequest {
  string player_token = 1;
  int32 toNodeId = 2;
}

message MoveResponse {
  MoveResult result = 1;
  GameError error = 2;
}

message SendMessageRequest {
  string message = 1;
}

message SendMessageResponse {
}
message WatchRequest {
  string token = 1;
}
//TODO change the name to Edge
message Vector{
  int32 vector_id = 1;
  int32 first_node_id = 2;
  int32 second_node_id = 3;
  float price = 4;
}
message Node{
  int32 node_id = 1;
  repeated Vector vectors = 2;
  repeated int32 players_ids = 3;
}
message GameResponse {
  GameStatus game_status = 1;
  GameResult game_result = 2;
  Turn turn = 3;
  repeated Node nodes=4;
}

service HideAndSeekGame {
  rpc DeclareReadiness(DeclareReadinessRequest) returns (DeclareReadinessResponse);
  rpc Watch(WatchRequest) returns(stream GameResponse);
  rpc Move(MoveRequest) returns (MoveResponse);
}
